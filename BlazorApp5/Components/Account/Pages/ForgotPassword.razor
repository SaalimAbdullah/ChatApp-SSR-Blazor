@page "/Account/ForgotPassword"

@using System.ComponentModel.DataAnnotations
@using System.Text
@using System.Text.Encodings.Web
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.WebUtilities
@using BlazorApp5.Data

@inject UserManager<ApplicationUser> UserManager
@inject IEmailSender<ApplicationUser> EmailSender
@inject NavigationManager NavigationManager
@inject IdentityRedirectManager RedirectManager

<PageTitle>Forgot your password?</PageTitle>

<h1>Forgot your password?</h1>
<div class="container py-5">
    <div class="row justify-content-center">
        <div class="col-md-6 col-lg-5">
            <div class="card shadow rounded-4 border-0">
                <div class="card-body p-4">
                    <h3 class="mb-3 text-center text-primary">Forgot Your Password?</h3>
                    <p class="text-muted text-center mb-4">Enter your email address and we’ll send you a link to reset your password.</p>

        <EditForm Model="Input" FormName="forgot-password" OnValidSubmit="OnValidSubmitAsync" method="post">
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert" />

            <div class="form-floating mb-3">
                <InputText @bind-Value="Input.Email" class="form-control" autocomplete="username" aria-required="true" placeholder="name@example.com" />
                <label for="email" class="form-label">Email</label>
                <ValidationMessage For="() => Input.Email" class="text-danger" />
            </div>
                        <button type="submit" class="btn btn-primary w-100 py-2 rounded-3 shadow-sm">
                            Send Reset Link
                        </button>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    [SupplyParameterFromForm]
    private InputModel Input { get; set; } = new();

    private async Task OnValidSubmitAsync()
    {
        var user = await UserManager.FindByEmailAsync(Input.Email);
        if (user is null || !(await UserManager.IsEmailConfirmedAsync(user)))
        {
            // Don't reveal that the user does not exist or is not confirmed
            RedirectManager.RedirectTo("Account/ForgotPasswordConfirmation");
        }

        // For more information on how to enable account confirmation and password reset please
        // visit https://go.microsoft.com/fwlink/?LinkID=532713
        var code = await UserManager.GeneratePasswordResetTokenAsync(user);
        code = WebEncoders.Base64UrlEncode(Encoding.UTF8.GetBytes(code));
        var callbackUrl = NavigationManager.GetUriWithQueryParameters(
            NavigationManager.ToAbsoluteUri("Account/ResetPassword").AbsoluteUri,
            new Dictionary<string, object?> { ["code"] = code });

        await EmailSender.SendPasswordResetLinkAsync(user, Input.Email, HtmlEncoder.Default.Encode(callbackUrl));

        RedirectManager.RedirectTo("Account/ForgotPasswordConfirmation");
    }

    private sealed class InputModel
    {
        [Required]
        [EmailAddress]
        public string Email { get; set; } = "";
    }
}

<style>
    .container {
        padding-top: 3rem;
    }

    .card {
        border: none;
        border-radius: 1.5rem;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
        background-color: #f9fafb;
    }

    .card-body {
        padding: 2rem;
    }

    h1, h2, h3 {
        font-weight: 600;
        color: #13aa52; /* MongoDB green */
    }

    .form-floating > .form-control {
        border-radius: 0.75rem;
        border: 1px solid #d1d5db;
        background-color: #ffffff;
    }

    .form-floating > label {
        color: #6b7280; /* Gray-500 */
    }

    .btn-primary {
        background-color: #13aa52;
        border: none;
        padding: 0.6rem;
        font-weight: 500;
        border-radius: 0.75rem;
        box-shadow: 0 2px 8px rgba(19, 170, 82, 0.2);
        transition: all 0.2s ease-in-out;
    }

        .btn-primary:hover {
            background-color: #0f8c42;
            box-shadow: 0 4px 12px rgba(19, 170, 82, 0.3);
        }

    .text-muted {
        font-size: 0.95rem;
        color: #6b7280;
    }

    .text-danger {
        font-size: 0.9rem;
        color: #dc3545;
    }

    .validation-summary-errors ul {
        padding-left: 1rem;
    }
</style>

